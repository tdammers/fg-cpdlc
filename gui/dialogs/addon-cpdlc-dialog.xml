<?xml version="1.0" encoding="UTF-8"?>
<PropertyList>
    <name>addon-cpdlc-dialog</name>
    <layout>vbox</layout>
	<width>800</width>




    <nasal>
        <open><![CDATA[
            var dlg = cmdarg();
            var downlinkGroupCombo = gui.findElementByName(dlg, 'downlink-group');
            var downlinkElemCombo = gui.findElementByName(dlg, 'downlink-element');
            var downlinkFieldsGroup = gui.findElementByName(dlg, 'downlink-fields');

            downlinkGroupCombo.removeChildren('value');
            foreach (var group; keys(globals.CPDLC.downlinkElems)) {
                downlinkGroupCombo.addChild('value').setValue(group);
            }

            var updateDownlinkElementCombo = func (node) {
                # print("UPDATE DOWNLINK GROUP");
                var group = node.getValue();
                var items = globals.CPDLC.downlinkElems[group];
                setprop('/cpdlc/dialog/downlink-element', '');
                downlinkElemCombo.removeChildren('value');
                downlinkElemCombo.addChild('value').setValue('');
                if (typeof(items) == 'vector') {
                    foreach (var row; items) {
                        # debug.dump(row[1]);
                        downlinkElemCombo.addChild('value').setValue(row[1]);
                    }
                }
                gui.dialog_update('addon-cpdlc-dialog');
            };
            var groupListener = setlistener('/cpdlc/dialog/downlink-group', updateDownlinkElementCombo, 1, 0);

            var updateDownlinkFields = func (node) {
                # print("UPDATE DOWNLINK ELEM");
                var group = getprop('/cpdlc/dialog/downlink-group');
                var elem = node.getValue();
                var items = globals.CPDLC.downlinkElems[group];
                var item = nil;

                if (typeof(items) == 'vector') {
                    foreach (var r; items) {
                        if (r[1] == elem) {
                            item = r;
                            break;
                        }
                    }
                }
                # debug.dump(item);
                if (item == nil) {
                    setprop('/cpdlc/dialog/downlink-reply', 'N');
                }
                else {
                    setprop('/cpdlc/dialog/downlink-reply', item[3]);
                }
                for (var i = 0; i < 6; i += 1) {
                    var field = (item != nil and i < size(item[4])) ? item[4][i] : '';
                    # debug.dump(field);
                    if (field == '') {
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/label', substr(field, 1));
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/value', '');
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/visible', 0);
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/editable', 0);
                    }
                    elsif (substr(field, 0, 1) == '$') {
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/label', substr(field, 1));
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/value', '');
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/visible', 1);
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/editable', 1);
                    }
                    else {
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/label', '');
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/value', field);
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/visible', 1);
                        setprop('/cpdlc/dialog/downlink-field[' ~ i ~ ']/editable', 0);
                    }
                }
                gui.dialog_update('addon-cpdlc-dialog');
            };
            var elemListener = setlistener('/cpdlc/dialog/downlink-element', updateDownlinkFields, 1, 0);

            var sendDownlink = func () {
                var parts = [];
                for (var i = 0; i < 6; i += 1) {
                    append(parts, getprop('/cpdlc/dialog/downlink-field[' ~ i  ~ ']/value'));
                }
                var msg = string.join(' ', parts);
                var station = getprop('/cpdlc/current-station');
                var reply = getprop('/cpdlc/dialog/downlink-reply') or 'N';

                if (station == nil or station == '') {
                    debug.warn('No current CPDLC station');
                    return;
                }

                globals.cpdlc.sendCPDLC(station, '', reply, msg);

                setprop('/cpdlc/dialog/downlink-group',
                    getprop('/cpdlc/dialog/downlink-group'));
                setprop('/cpdlc/dialog/downlink-element', '');
                fgcommand('dialog-apply');
                gui.dialog_update('addon-cpdlc-dialog');
            };


        ]]></open>

        <close><![CDATA[
            removelistener(groupListener);
            removelistener(elemListener);
        ]]></close>
    </nasal>

	<group>
		<layout>hbox</layout>
		<empty>
			<stretch>1</stretch>
		</empty>
		<text>
			<label>CPDLC</label>
		</text>
		<empty>
			<stretch>1</stretch>
		</empty>
		<button>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<legend></legend>
			<keynum>27</keynum>
			<border>2</border>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
	</group>
	<hrule />

    <text>
        <label>ATC</label>
    </text>

    <group>
        <layout>hbox</layout>
        <halign>left</halign>
        <input>
            <property>/cpdlc/logon-station</property>
            <name>logon-station</name>
            <live>1</live>
            <binding>
                <command>dialog-apply</command>
                <object-name>logon-station</object-name>
            </binding>
        </input>
        <button>
            <legend>Logon</legend>
            <binding>
                <command>dialog-apply</command>
                <object-name>logon-station</object-name>
            </binding>
            <binding>
                <command>nasal</command>
                <script>globals.cpdlc.cpdlcRequestLogon();</script>
            </binding>
        </button>
        <button>
            <legend>Logoff</legend>
            <binding>
                <command>nasal</command>
                <script>globals.cpdlc.cpdlcLogoff();</script>
            </binding>
        </button>
        <text>
            <label>Current: </label>
        </text>
        <text>
            <property>/cpdlc/current-station</property>
            <live>true</live>
            <pref-width>150</pref-width>
        </text>
        <text>
            <property>/cpdlc/current-station-name</property>
            <live>true</live>
            <pref-width>200</pref-width>
        </text>
    </group>

    <hrule/>

    <group>
        <layout>hbox</layout>
        <pref-height>350</pref-height>
        <group>
            <layout>vbox</layout>
            <halign>fill</halign>
            <valign>top</valign>
            <pref-width>100</pref-width>
            <group>
                <halign>fill</halign>
                <layout>hbox</layout>
                <pref-width>100</pref-width>
                <pref-height>20</pref-height>
                <text>
                    <label>OPEN:</label>
                    <pref-width>20</pref-width>
                </text>
                <text>
                    <property>/cpdlc/num-open</property>
                    <pref-width>20</pref-width>
                    <live>true</live>
                </text>
            </group>
            <group>
                <halign>fill</halign>
                <layout>hbox</layout>
                <button>
                    <halign>fill</halign>
                    <legend>&lt;&lt;</legend>
                    <binding>
                        <command>nasal</command>
                        <script>globals.cpdlc.selectFirstOpen();</script>
                    </binding>
                    <visible>
                        <greater-than>
                            <property>/cpdlc/num-open</property>
                            <value>0</value>
                        </greater-than>
                    </visible>
                </button>
                <button>
                    <halign>fill</halign>
                    <legend>&lt;</legend>
                    <binding>
                        <command>nasal</command>
                        <script>globals.cpdlc.selectPrevOpen();</script>
                    </binding>
                    <visible>
                        <greater-than>
                            <property>/cpdlc/num-open</property>
                            <value>0</value>
                        </greater-than>
                    </visible>
                </button>
                <button>
                    <halign>fill</halign>
                    <legend>&gt;</legend>
                    <binding>
                        <command>nasal</command>
                        <script>globals.cpdlc.selectNextOpen();</script>
                    </binding>
                    <visible>
                        <greater-than>
                            <property>/cpdlc/num-open</property>
                            <value>0</value>
                        </greater-than>
                    </visible>
                </button>
            </group>
            <hrule/>
            <group>
                <halign>fill</halign>
                <layout>hbox</layout>
                <pref-width>100</pref-width>
                <pref-height>20</pref-height>
                <text>
                    <label>UNREAD:</label>
                    <pref-width>20</pref-width>
                </text>
                <text>
                    <property>/cpdlc/num-unread</property>
                    <pref-width>20</pref-width>
                    <live>true</live>
                </text>
            </group>
            <button>
                <halign>fill</halign>
                <legend>Next</legend>
                <binding>
                    <command>nasal</command>
                    <script>globals.cpdlc.selectFirstUnread();</script>
                </binding>
                <visible>
                    <greater-than>
                        <property>/cpdlc/num-unread</property>
                        <value>0</value>
                    </greater-than>
                </visible>
            </button>
            <hrule/>
            <button>
                <halign>fill</halign>
                <legend>Deselect</legend>
                <binding>
                    <command>nasal</command>
                    <script>globals.cpdlc.selectMessage(nil);</script>
                </binding>
            </button>
        </group>
        <group>
            <visible>
                <not-equals>
                    <property>/cpdlc/selected-message-id</property>
                    <value type="string"></value>
                </not-equals>
            </visible>
            <layout>vbox</layout>
            <halign>fill</halign>
            <group>
                <layout>hbox</layout>
                <halign>left</halign>
                <text>
                    <property>/cpdlc/selected-message/from</property>
                    <live>true</live>
                    <height>20</height>
                    <pref-width>50</pref-width>
                    <valign>top</valign>
                    <halign>left</halign>
                </text>
                <text>
                    <label>-&gt;</label>
                    <pref-width>10</pref-width>
                    <halign>left</halign>
                </text>
                <text>
                    <property>/cpdlc/selected-message/to</property>
                    <live>true</live>
                    <height>20</height>
                    <pref-width>50</pref-width>
                    <valign>top</valign>
                    <halign>left</halign>
                </text>
            </group>
            <textbox>
                <property>/cpdlc/selected-message/message</property>
                <halign>fill</halign>
                <valign>top</valign>
                <stretch>true</stretch>
                <pref-width>200</pref-width>
                <pref-height>150</pref-height>
                <slider>20</slider>
                <live>true</live>
                <wrap>true</wrap>
                <editable>false</editable>
            </textbox>
            <hrule/>
            <group>
                <layout>table</layout>
                <halign>fill</halign>
                <valign>top</valign>
                <pref-width>200</pref-width>
                <button>
                    <legend>ROGER</legend>
                    <row>0</row>
                    <col>0</col>
                    <halign>fill</halign>
                    <visible>
                        <equals>
                            <property>/cpdlc/selected-message/cpdlc/ra</property>
                            <value>R</value>
                        </equals>
                    </visible>
                    <binding>
                        <command>nasal</command>
                        <script>
                            globals.cpdlc.cpdlcRoger(getprop('/cpdlc/selected-message/id'));
                        </script>
                    </binding>
                </button>
                <button>
                    <legend>WILCO</legend>
                    <row>0</row>
                    <col>0</col>
                    <halign>fill</halign>
                    <visible>
                        <equals>
                            <property>/cpdlc/selected-message/cpdlc/ra</property>
                            <value>WU</value>
                        </equals>
                    </visible>
                    <binding>
                        <command>nasal</command>
                        <script>
                            globals.cpdlc.cpdlcWilco(getprop('/cpdlc/selected-message/id'));
                        </script>
                    </binding>
                </button>
                <button>
                    <legend>UNABLE</legend>
                    <row>1</row>
                    <col>0</col>
                    <halign>fill</halign>
                    <visible>
                        <or>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>WU</value>
                            </equals>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>R</value>
                            </equals>
                        </or>
                    </visible>
                    <binding>
                        <command>dialog-apply</command>
                        <object-name>unable-reason</object-name>
                    </binding>
                    <binding>
                        <command>nasal</command>
                        <script>
                            globals.cpdlc.cpdlcUnable(
                                getprop('/cpdlc/selected-message/id'),
                                getprop('/cpdlc/dialog/unable-reason'));
                        </script>
                    </binding>
                </button>
                <text>
                    <label>DUE TO</label>
                    <row>1</row>
                    <col>1</col>
                    <visible>
                        <or>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>WU</value>
                            </equals>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>R</value>
                            </equals>
                        </or>
                    </visible>
                </text>
                <input>
                    <row>1</row>
                    <col>2</col>
                    <halign>fill</halign>
                    <visible>
                        <or>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>WU</value>
                            </equals>
                            <equals>
                                <property>/cpdlc/selected-message/cpdlc/ra</property>
                                <value>R</value>
                            </equals>
                        </or>
                    </visible>
                    <property>/cpdlc/dialog/unable-reason</property>
                    <name>unable-reason</name>
                    <binding>
                        <command>dialog-apply</command>
                        <object-name>unable-reason</object-name>
                    </binding>
                </input>
                <button>
                    <legend>AFFIRM</legend>
                    <row>0</row>
                    <col>0</col>
                    <halign>fill</halign>
                    <visible>
                        <equals>
                            <property>/cpdlc/selected-message/cpdlc/ra</property>
                            <value>AN</value>
                        </equals>
                    </visible>
                    <binding>
                        <command>nasal</command>
                        <script>
                            globals.cpdlc.cpdlcAffirm(getprop('/cpdlc/selected-message/id'));
                        </script>
                    </binding>
                </button>
                <button>
                    <legend>NEGATIVE</legend>
                    <row>1</row>
                    <col>0</col>
                    <halign>fill</halign>
                    <visible>
                        <equals>
                            <property>/cpdlc/selected-message/cpdlc/ra</property>
                            <value>AN</value>
                        </equals>
                    </visible>
                    <binding>
                        <command>nasal</command>
                        <script>
                            globals.cpdlc.cpdlcNegative(getprop('/cpdlc/selected-message/id'));
                        </script>
                    </binding>
                </button>
            </group>
        </group>
        <group>
            <layout>vbox</layout>
            <halign>fill</halign>
            <valign>top</valign>
            <text>
                <label>DOWNLINK</label>
            </text>
            <combo>
                <halign>left</halign>
                <pref-width>200</pref-width>
                <name>downlink-group</name>
                <property>/cpdlc/dialog/downlink-group</property>
                <binding>
                    <command>dialog-apply</command>
                    <object-name>downlink-group</object-name>
                </binding>
            </combo>
            <combo>
                <halign>left</halign>
                <pref-width>200</pref-width>
                <name>downlink-element</name>
                <property>/cpdlc/dialog/downlink-element</property>
                <binding>
                    <command>dialog-apply</command>
                    <object-name>downlink-element</object-name>
                </binding>
            </combo>
            <group>
                <layout>vbox</layout>
                <halign>fill</halign>
                <valign>top</valign>
                <name>downlink-fields</name>
                <input>
                    <property>/cpdlc/dialog/downlink-field[0]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[0]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[0]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[0]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
                <input>
                    <property>/cpdlc/dialog/downlink-field[1]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[1]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[1]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[1]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
                <input>
                    <property>/cpdlc/dialog/downlink-field[2]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[2]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[2]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[2]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
                <input>
                    <property>/cpdlc/dialog/downlink-field[3]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[3]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[3]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[3]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
                <input>
                    <property>/cpdlc/dialog/downlink-field[4]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[4]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[4]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[4]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
                <input>
                    <property>/cpdlc/dialog/downlink-field[5]/value</property>
                    <label><property>/cpdlc/dialog/downlink-field[5]/label</property></label>
                    <visible><property>/cpdlc/dialog/downlink-field[5]/visible</property></visible>
                    <editable><property>/cpdlc/dialog/downlink-field[5]/editable</property></editable>
                    <pref-width>200</pref-width>
                    <halign>left</halign>
                    <binding><command>dialog-apply</command></binding>
                </input>
            </group>
            <button>
                <legend>Send</legend>
                <binding>
                    <command>dialog-apply</command>
                </binding>
                <binding>
                    <command>nasal</command>
                    <script>sendDownlink();</script>
                </binding>
            </button>
        </group>
    </group>

    <hrule/>
    <text>
        <label>TELEX</label>
    </text>
    <textbox>
        <halign>fill</halign>
        <valign>fill</valign>
        <stretch>true</stretch>
        <pref-width>350</pref-width>
        <pref-height>150</pref-height>
        <slider>20</slider>
        <live>true</live>
        <wrap>true</wrap>
        <editable>false</editable>
        <top-line>-4</top-line>
        <property>/cpdlc/dialog/telex-log</property>
    </textbox>
    <group>
        <layout>hbox</layout>
        <text>
            <halign>fill</halign>
            <pref-width>1</pref-width>
            <label>TO:</label>
        </text>
        <input>
            <halign>fill</halign>
            <property>/cpdlc/dialog/telex-to</property>
            <pref-width>30</pref-width>
            <name>telex-to</name>
            <binding>
                <command>dialog-apply</command>
                <object-name>telex-to</object-name>
            </binding>
        </input>
        <input>
            <halign>fill</halign>
            <property>/cpdlc/dialog/telex-message</property>
            <pref-width>500</pref-width>
            <name>telex-message</name>
            <binding>
                <command>dialog-apply</command>
                <object-name>telex-message</object-name>
            </binding>
        </input>
        <button>
            <legend>Send</legend>
            <halign>fill</halign>
            <pref-width>50</pref-width>
            <width>50</width>
            <binding>
                <command>dialog-apply</command>
                <object-name>telex-message</object-name>
            </binding>
            <binding>
                <command>dialog-apply</command>
                <object-name>telex-to</object-name>
            </binding>
            <binding>
                <command>dialog-apply</command>
                <object-name>logon-station</object-name>
            </binding>
            <binding>
                <command>nasal</command>
                <script><![CDATA[
                    var msg = getprop('/cpdlc/dialog/telex-message');
                    var to = getprop('/cpdlc/dialog/telex-to');

                    globals.acars.send(to, 'telex', string.uc(msg));
                    setprop('/cpdlc/dialog/telex-message', '');
                ]]></script>
            </binding>
        </button>
    </group>

    <hrule/>
    <group>
        <layout>hbox</layout>
        <button>
            <legend>Reload CPDLC Addon</legend>
            <binding>
                <command>addon-reload</command>
                <id>nl.tobiasdammers.fg-cpdlc</id>
            </binding>
        </button>
        <button>
            <legend>Close</legend>
            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
    </group>
</PropertyList>
